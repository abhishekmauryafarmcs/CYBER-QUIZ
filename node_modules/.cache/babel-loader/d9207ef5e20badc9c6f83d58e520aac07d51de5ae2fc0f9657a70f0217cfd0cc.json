{"ast":null,"code":"var _jsxFileName = \"E:\\\\CYBER QUIZ\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, Paper, Radio, RadioGroup, FormControlLabel, FormControl, LinearProgress, Alert } from '@mui/material';\nimport quizData from '../data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const navigate = useNavigate();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const handleAnswerSelect = event => {\n    setSelectedAnswer(parseInt(event.target.value));\n  };\n  const handleSubmit = () => {\n    if (selectedAnswer === null) return;\n    setIsAnswered(true);\n    if (selectedAnswer === quizData.questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setShowExplanation(true);\n  };\n  const handleNext = () => {\n    if (currentQuestion < quizData.questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedAnswer(null);\n      setShowExplanation(false);\n      setIsAnswered(false);\n    } else {\n      // Quiz completed, navigate to results\n      navigate('/results', {\n        state: {\n          score,\n          total: quizData.questions.length\n        }\n      });\n    }\n  };\n  const progress = (currentQuestion + 1) / quizData.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 3,\n      maxWidth: 'md',\n      mx: 'auto',\n      p: {\n        xs: 2,\n        sm: 3\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      sx: {\n        height: 10,\n        borderRadius: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      color: \"text.secondary\",\n      children: [\"Question \", currentQuestion + 1, \" of \", quizData.questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          sm: 4\n        },\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: quizData.questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        sx: {\n          width: '100%',\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: selectedAnswer,\n          onChange: handleAnswerSelect,\n          children: quizData.questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: index,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 26\n            }, this),\n            label: option,\n            disabled: isAnswered,\n            sx: {\n              marginY: 1,\n              padding: 1,\n              borderRadius: 1,\n              '&:hover': {\n                backgroundColor: 'action.hover'\n              }\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), showExplanation && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: selectedAnswer === quizData.questions[currentQuestion].correctAnswer ? \"success\" : \"error\",\n        sx: {\n          mt: 2\n        },\n        children: quizData.questions[currentQuestion].explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          mt: 3,\n          gap: 2,\n          flexDirection: {\n            xs: 'column',\n            sm: 'row'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: selectedAnswer === null || isAnswered,\n          onClick: handleSubmit,\n          fullWidth: true,\n          sx: {\n            order: {\n              xs: 2,\n              sm: 1\n            }\n          },\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          disabled: !isAnswered,\n          onClick: handleNext,\n          fullWidth: true,\n          sx: {\n            order: {\n              xs: 1,\n              sm: 2\n            }\n          },\n          children: currentQuestion === quizData.questions.length - 1 ? 'Finish Quiz' : 'Next Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"DklLuvU7HIIE9s3L4z33cpPMOYw=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","Typography","Button","Paper","Radio","RadioGroup","FormControlLabel","FormControl","LinearProgress","Alert","quizData","jsxDEV","_jsxDEV","QuizPage","_s","navigate","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","showExplanation","setShowExplanation","isAnswered","setIsAnswered","handleAnswerSelect","event","parseInt","target","value","handleSubmit","questions","correctAnswer","handleNext","length","state","total","progress","sx","display","flexDirection","gap","maxWidth","mx","p","xs","sm","children","variant","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","align","color","elevation","gutterBottom","question","component","width","mt","onChange","options","map","option","index","control","label","disabled","marginY","padding","backgroundColor","severity","explanation","justifyContent","onClick","fullWidth","order","_c","$RefreshReg$"],"sources":["E:/CYBER QUIZ/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  LinearProgress,\r\n  Alert,\r\n} from '@mui/material';\r\nimport quizData from '../data/questions.json';\r\n\r\nfunction QuizPage() {\r\n  const navigate = useNavigate();\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [showExplanation, setShowExplanation] = useState(false);\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n\r\n  const handleAnswerSelect = (event) => {\r\n    setSelectedAnswer(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedAnswer === null) return;\r\n\r\n    setIsAnswered(true);\r\n    if (selectedAnswer === quizData.questions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n    setShowExplanation(true);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestion < quizData.questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setSelectedAnswer(null);\r\n      setShowExplanation(false);\r\n      setIsAnswered(false);\r\n    } else {\r\n      // Quiz completed, navigate to results\r\n      navigate('/results', { state: { score, total: quizData.questions.length } });\r\n    }\r\n  };\r\n\r\n  const progress = ((currentQuestion + 1) / quizData.questions.length) * 100;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 3,\r\n        maxWidth: 'md',\r\n        mx: 'auto',\r\n        p: { xs: 2, sm: 3 },\r\n      }}\r\n    >\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={progress}\r\n        sx={{ height: 10, borderRadius: 5 }}\r\n      />\r\n      \r\n      <Typography variant=\"h6\" align=\"center\" color=\"text.secondary\">\r\n        Question {currentQuestion + 1} of {quizData.questions.length}\r\n      </Typography>\r\n\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          p: { xs: 2, sm: 4 },\r\n          borderRadius: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {quizData.questions[currentQuestion].question}\r\n        </Typography>\r\n\r\n        <FormControl component=\"fieldset\" sx={{ width: '100%', mt: 2 }}>\r\n          <RadioGroup value={selectedAnswer} onChange={handleAnswerSelect}>\r\n            {quizData.questions[currentQuestion].options.map((option, index) => (\r\n              <FormControlLabel\r\n                key={index}\r\n                value={index}\r\n                control={<Radio />}\r\n                label={option}\r\n                disabled={isAnswered}\r\n                sx={{\r\n                  marginY: 1,\r\n                  padding: 1,\r\n                  borderRadius: 1,\r\n                  '&:hover': {\r\n                    backgroundColor: 'action.hover',\r\n                  },\r\n                }}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        {showExplanation && (\r\n          <Alert\r\n            severity={selectedAnswer === quizData.questions[currentQuestion].correctAnswer ? \"success\" : \"error\"}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            {quizData.questions[currentQuestion].explanation}\r\n          </Alert>\r\n        )}\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            mt: 3,\r\n            gap: 2,\r\n            flexDirection: { xs: 'column', sm: 'row' },\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={selectedAnswer === null || isAnswered}\r\n            onClick={handleSubmit}\r\n            fullWidth={true}\r\n            sx={{ order: { xs: 2, sm: 1 } }}\r\n          >\r\n            Submit Answer\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            disabled={!isAnswered}\r\n            onClick={handleNext}\r\n            fullWidth={true}\r\n            sx={{ order: { xs: 1, sm: 2 } }}\r\n          >\r\n            {currentQuestion === quizData.questions.length - 1 ? 'Finish Quiz' : 'Next Question'}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default QuizPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}