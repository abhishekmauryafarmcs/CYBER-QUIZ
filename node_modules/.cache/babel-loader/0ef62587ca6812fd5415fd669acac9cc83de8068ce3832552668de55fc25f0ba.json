{"ast":null,"code":"var _jsxFileName = \"E:\\\\CYBER QUIZ\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Paper, Radio, RadioGroup, FormControlLabel, FormControl, LinearProgress, Alert, Chip, Divider } from '@mui/material';\nimport quizData from '../data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTime(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}\nfunction calculateTimeBonus(timeSpent, difficulty) {\n  const maxTime = {\n    beginner: 300,\n    // 5 minutes\n    intermediate: 600,\n    // 10 minutes\n    advanced: 900 // 15 minutes\n  };\n  const maxTimeBonus = {\n    beginner: 50,\n    intermediate: 100,\n    advanced: 150\n  };\n  const timeLimit = maxTime[difficulty];\n  const maxBonus = maxTimeBonus[difficulty];\n  if (timeSpent > timeLimit) return 0;\n  return Math.round((1 - timeSpent / timeLimit) * maxBonus);\n}\nfunction QuizPage() {\n  _s();\n  var _location$state, _questions$currentQue, _questions$currentQue2, _questions$currentQue3, _questions$currentQue4, _questions$currentQue5, _questions$currentQue6, _questions$currentQue7, _questions$currentQue8, _questions$currentQue9, _questions$currentQue10, _questions$currentQue11, _questions$currentQue12, _questions$currentQue13, _questions$currentQue14, _questions$currentQue15;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const difficulty = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.difficulty) || 'beginner';\n\n  // Function to randomly select 10 questions from the pool\n  const getRandomQuestions = (allQuestions, count = 10) => {\n    const shuffled = [...allQuestions].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  };\n\n  // Get all questions for the difficulty level and randomly select 10\n  const allQuestionsForDifficulty = quizData.questions[difficulty];\n  const [questions] = useState(() => getRandomQuestions(allQuestionsForDifficulty));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [earnedPoints, setEarnedPoints] = useState(0);\n  const [timeSpent, setTimeSpent] = useState(0);\n  const [quizStartTime] = useState(Date.now());\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (!isQuizComplete) {\n        setTimeSpent(Math.floor((Date.now() - quizStartTime) / 1000));\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isQuizComplete, quizStartTime]);\n  const handleAnswerSelect = event => {\n    setSelectedAnswer(parseInt(event.target.value));\n  };\n  const handleSubmit = () => {\n    if (selectedAnswer === null) return;\n    setIsAnswered(true);\n    if (selectedAnswer === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n      setEarnedPoints(earnedPoints + questions[currentQuestion].points);\n    }\n    setShowExplanation(true);\n  };\n  const handleNext = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedAnswer(null);\n      setShowExplanation(false);\n      setIsAnswered(false);\n    } else {\n      // Quiz completed\n      setIsQuizComplete(true);\n      const timeBonus = calculateTimeBonus(timeSpent, difficulty);\n      const finalPoints = earnedPoints + timeBonus;\n      navigate('/results', {\n        state: {\n          score,\n          total: questions.length,\n          difficulty,\n          points: finalPoints,\n          maxPoints: questions.reduce((sum, q) => sum + q.points, 0),\n          timeSpent,\n          timeBonus\n        }\n      });\n    }\n  };\n  const progress = (currentQuestion + 1) / questions.length * 100;\n  const getDifficultyColor = () => {\n    switch (difficulty) {\n      case 'beginner':\n        return 'success';\n      case 'intermediate':\n        return 'warning';\n      case 'advanced':\n        return 'error';\n      default:\n        return 'primary';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 3,\n      maxWidth: 'md',\n      mx: 'auto',\n      p: {\n        xs: 2,\n        sm: 3\n      },\n      pb: {\n        xs: '80px',\n        sm: '100px'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        label: difficulty.charAt(0).toUpperCase() + difficulty.slice(1),\n        color: getDifficultyColor(),\n        sx: {\n          fontSize: '1rem',\n          py: 0.5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: [\"Points: \", earnedPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Time: ${formatTime(timeSpent)}`,\n        color: \"primary\",\n        variant: \"outlined\",\n        sx: {\n          fontSize: '1rem',\n          py: 0.5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      sx: {\n        height: 10,\n        borderRadius: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      color: \"text.secondary\",\n      children: [\"Question \", currentQuestion + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          sm: 4\n        },\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), ((_questions$currentQue = questions[currentQuestion].scenario) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.type) === 'email' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: 'background.default',\n          fontFamily: 'monospace'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.from]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            whiteSpace: 'pre-line',\n            mt: 1\n          },\n          children: questions[currentQuestion].scenario.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), ((_questions$currentQue2 = questions[currentQuestion].scenario) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.type) === 'popup' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#fff4e5',\n          border: '2px solid #ed6c02'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            color: '#ed6c02',\n            fontWeight: 'bold'\n          },\n          children: questions[currentQuestion].scenario.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            whiteSpace: 'pre-line'\n          },\n          children: questions[currentQuestion].scenario.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), ((_questions$currentQue3 = questions[currentQuestion].scenario) === null || _questions$currentQue3 === void 0 ? void 0 : _questions$currentQue3.type) === 'code_review' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#1e1e1e',\n          fontFamily: 'monospace'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            whiteSpace: 'pre',\n            color: '#d4d4d4',\n            overflowX: 'auto'\n          },\n          children: questions[currentQuestion].scenario.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), ((_questions$currentQue4 = questions[currentQuestion].scenario) === null || _questions$currentQue4 === void 0 ? void 0 : _questions$currentQue4.type) === 'log_analysis' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#1e1e1e',\n          fontFamily: 'monospace'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            whiteSpace: 'pre-line',\n            color: '#d4d4d4'\n          },\n          children: ((_questions$currentQue5 = questions[currentQuestion].scenario.entries) === null || _questions$currentQue5 === void 0 ? void 0 : _questions$currentQue5.join('\\n')) || ((_questions$currentQue6 = questions[currentQuestion].scenario.log_entries) === null || _questions$currentQue6 === void 0 ? void 0 : _questions$currentQue6.join('\\n'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), ((_questions$currentQue7 = questions[currentQuestion].scenario) === null || _questions$currentQue7 === void 0 ? void 0 : _questions$currentQue7.type) === 'network_traffic' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#f5f5f5'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Pattern:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.pattern]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Frequency:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.frequency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Target:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.target]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), ((_questions$currentQue8 = questions[currentQuestion].scenario) === null || _questions$currentQue8 === void 0 ? void 0 : _questions$currentQue8.type) === 'message' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#f8f9fa'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: questions[currentQuestion].scenario.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            whiteSpace: 'pre-line'\n          },\n          children: questions[currentQuestion].scenario.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), ((_questions$currentQue9 = questions[currentQuestion].scenario) === null || _questions$currentQue9 === void 0 ? void 0 : _questions$currentQue9.type) === 'sms' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#e3f2fd',\n          maxWidth: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: questions[currentQuestion].scenario.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            whiteSpace: 'pre-line'\n          },\n          children: questions[currentQuestion].scenario.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), ((_questions$currentQue10 = questions[currentQuestion].scenario) === null || _questions$currentQue10 === void 0 ? void 0 : _questions$currentQue10.type) === 'password_analysis' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#f5f5f5'\n        },\n        children: questions[currentQuestion].scenario.passwords.map((password, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Password \", index + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this), \" \", password.value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: [\"Strength: \", password.strength, \" | Issues: \", password.issues.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), index < questions[currentQuestion].scenario.passwords.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 86\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), ((_questions$currentQue11 = questions[currentQuestion].scenario) === null || _questions$currentQue11 === void 0 ? void 0 : _questions$currentQue11.type) === 'network_setup' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#f5f5f5'\n        },\n        children: questions[currentQuestion].scenario.networks.map((network, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Network \", index + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this), \" \", network.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            display: \"block\",\n            children: [\"Security: \", network.security]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            display: \"block\",\n            children: [\"VPN: \", network.vpn ? '✅' : '❌', \" | HTTPS: \", network.https ? '✅' : '❌']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), index < questions[currentQuestion].scenario.networks.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 85\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), ((_questions$currentQue12 = questions[currentQuestion].scenario) === null || _questions$currentQue12 === void 0 ? void 0 : _questions$currentQue12.type) === 'system_prompt' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#fff',\n          border: '1px solid #ccc'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: questions[currentQuestion].scenario.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            whiteSpace: 'pre-line'\n          },\n          children: questions[currentQuestion].scenario.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), ((_questions$currentQue13 = questions[currentQuestion].scenario) === null || _questions$currentQue13 === void 0 ? void 0 : _questions$currentQue13.type) === 'physical_security' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#ffebee'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Item:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Context:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.context]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Risks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.risks.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), ((_questions$currentQue14 = questions[currentQuestion].scenario) === null || _questions$currentQue14 === void 0 ? void 0 : _questions$currentQue14.type) === 'webpage' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#fff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          sx: {\n            color: 'text.secondary'\n          },\n          children: questions[currentQuestion].scenario.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: questions[currentQuestion].scenario.elements.map((element, index) => /*#__PURE__*/_jsxDEV(Button, {\n            variant: element.type === 'legitimate' ? 'contained' : 'outlined',\n            color: element.type === 'legitimate' ? 'primary' : 'inherit',\n            sx: {\n              m: 1\n            },\n            disabled: isAnswered,\n            children: element.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this), ((_questions$currentQue15 = questions[currentQuestion].scenario) === null || _questions$currentQue15 === void 0 ? void 0 : _questions$currentQue15.type) === 'exploit_analysis' && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          mb: 3,\n          backgroundColor: '#1e1e1e',\n          fontFamily: 'monospace'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: '#d4d4d4'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Payload:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            whiteSpace: 'pre-wrap',\n            color: '#d4d4d4',\n            overflowX: 'auto',\n            mt: 1\n          },\n          children: questions[currentQuestion].scenario.payload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 1,\n            borderColor: '#666'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: '#d4d4d4'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Target:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.target]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: '#d4d4d4'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Protection:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), \" \", questions[currentQuestion].scenario.protection]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        sx: {\n          width: '100%',\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: selectedAnswer,\n          onChange: handleAnswerSelect,\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: index,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 26\n            }, this),\n            label: option,\n            disabled: isAnswered,\n            sx: {\n              marginY: 1,\n              padding: 1,\n              borderRadius: 1,\n              '&:hover': {\n                backgroundColor: 'action.hover'\n              }\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), showExplanation && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: selectedAnswer === questions[currentQuestion].correctAnswer ? \"success\" : \"error\",\n        sx: {\n          mt: 2\n        },\n        children: questions[currentQuestion].explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          mt: 3,\n          gap: 2,\n          flexDirection: {\n            xs: 'column',\n            sm: 'row'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: selectedAnswer === null || isAnswered,\n          onClick: handleSubmit,\n          fullWidth: true,\n          sx: {\n            order: {\n              xs: 2,\n              sm: 1\n            }\n          },\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          disabled: !isAnswered,\n          onClick: handleNext,\n          fullWidth: true,\n          sx: {\n            order: {\n              xs: 1,\n              sm: 2\n            }\n          },\n          children: currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"kpoXtGJ9qJ8nNUjYgOjewzDwXaU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Box","Typography","Button","Paper","Radio","RadioGroup","FormControlLabel","FormControl","LinearProgress","Alert","Chip","Divider","quizData","jsxDEV","_jsxDEV","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","calculateTimeBonus","timeSpent","difficulty","maxTime","beginner","intermediate","advanced","maxTimeBonus","timeLimit","maxBonus","round","QuizPage","_s","_location$state","_questions$currentQue","_questions$currentQue2","_questions$currentQue3","_questions$currentQue4","_questions$currentQue5","_questions$currentQue6","_questions$currentQue7","_questions$currentQue8","_questions$currentQue9","_questions$currentQue10","_questions$currentQue11","_questions$currentQue12","_questions$currentQue13","_questions$currentQue14","_questions$currentQue15","navigate","location","state","getRandomQuestions","allQuestions","count","shuffled","sort","random","slice","allQuestionsForDifficulty","questions","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","showExplanation","setShowExplanation","isAnswered","setIsAnswered","earnedPoints","setEarnedPoints","setTimeSpent","quizStartTime","Date","now","isQuizComplete","setIsQuizComplete","timer","setInterval","clearInterval","handleAnswerSelect","event","parseInt","target","value","handleSubmit","correctAnswer","points","handleNext","length","timeBonus","finalPoints","total","maxPoints","reduce","sum","q","progress","getDifficultyColor","sx","display","flexDirection","gap","maxWidth","mx","p","xs","sm","pb","children","justifyContent","alignItems","flexWrap","label","charAt","toUpperCase","color","fontSize","py","fileName","_jsxFileName","lineNumber","columnNumber","variant","height","borderRadius","align","elevation","gutterBottom","question","scenario","type","mb","backgroundColor","fontFamily","from","subject","my","whiteSpace","mt","content","border","fontWeight","title","overflowX","code","entries","join","log_entries","pattern","frequency","sender","passwords","map","password","index","strength","issues","networks","network","name","security","vpn","https","item","context","risks","url","elements","element","m","disabled","text","payload","borderColor","protection","component","width","onChange","options","option","control","marginY","padding","severity","explanation","onClick","fullWidth","order","_c","$RefreshReg$"],"sources":["E:/CYBER QUIZ/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  LinearProgress,\r\n  Alert,\r\n  Chip,\r\n  Divider,\r\n} from '@mui/material';\r\nimport quizData from '../data/questions.json';\r\n\r\nfunction formatTime(seconds) {\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = seconds % 60;\r\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n}\r\n\r\nfunction calculateTimeBonus(timeSpent, difficulty) {\r\n  const maxTime = {\r\n    beginner: 300, // 5 minutes\r\n    intermediate: 600, // 10 minutes\r\n    advanced: 900, // 15 minutes\r\n  };\r\n\r\n  const maxTimeBonus = {\r\n    beginner: 50,\r\n    intermediate: 100,\r\n    advanced: 150,\r\n  };\r\n\r\n  const timeLimit = maxTime[difficulty];\r\n  const maxBonus = maxTimeBonus[difficulty];\r\n\r\n  if (timeSpent > timeLimit) return 0;\r\n  return Math.round((1 - timeSpent / timeLimit) * maxBonus);\r\n}\r\n\r\nfunction QuizPage() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const difficulty = location.state?.difficulty || 'beginner';\r\n  \r\n  // Function to randomly select 10 questions from the pool\r\n  const getRandomQuestions = (allQuestions, count = 10) => {\r\n    const shuffled = [...allQuestions].sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, count);\r\n  };\r\n\r\n  // Get all questions for the difficulty level and randomly select 10\r\n  const allQuestionsForDifficulty = quizData.questions[difficulty];\r\n  const [questions] = useState(() => getRandomQuestions(allQuestionsForDifficulty));\r\n  \r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [showExplanation, setShowExplanation] = useState(false);\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n  const [earnedPoints, setEarnedPoints] = useState(0);\r\n  const [timeSpent, setTimeSpent] = useState(0);\r\n  const [quizStartTime] = useState(Date.now());\r\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (!isQuizComplete) {\r\n        setTimeSpent(Math.floor((Date.now() - quizStartTime) / 1000));\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [isQuizComplete, quizStartTime]);\r\n\r\n  const handleAnswerSelect = (event) => {\r\n    setSelectedAnswer(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedAnswer === null) return;\r\n\r\n    setIsAnswered(true);\r\n    if (selectedAnswer === questions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n      setEarnedPoints(earnedPoints + questions[currentQuestion].points);\r\n    }\r\n    setShowExplanation(true);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setSelectedAnswer(null);\r\n      setShowExplanation(false);\r\n      setIsAnswered(false);\r\n    } else {\r\n      // Quiz completed\r\n      setIsQuizComplete(true);\r\n      const timeBonus = calculateTimeBonus(timeSpent, difficulty);\r\n      const finalPoints = earnedPoints + timeBonus;\r\n\r\n      navigate('/results', {\r\n        state: {\r\n          score,\r\n          total: questions.length,\r\n          difficulty,\r\n          points: finalPoints,\r\n          maxPoints: questions.reduce((sum, q) => sum + q.points, 0),\r\n          timeSpent,\r\n          timeBonus,\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const progress = ((currentQuestion + 1) / questions.length) * 100;\r\n\r\n  const getDifficultyColor = () => {\r\n    switch (difficulty) {\r\n      case 'beginner':\r\n        return 'success';\r\n      case 'intermediate':\r\n        return 'warning';\r\n      case 'advanced':\r\n        return 'error';\r\n      default:\r\n        return 'primary';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 3,\r\n        maxWidth: 'md',\r\n        mx: 'auto',\r\n        p: { xs: 2, sm: 3 },\r\n        pb: { xs: '80px', sm: '100px' },\r\n      }}\r\n    >\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 2\r\n      }}>\r\n        <Chip\r\n          label={difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}\r\n          color={getDifficultyColor()}\r\n          sx={{ fontSize: '1rem', py: 0.5 }}\r\n        />\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Points: {earnedPoints}\r\n        </Typography>\r\n        <Chip\r\n          label={`Time: ${formatTime(timeSpent)}`}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          sx={{ fontSize: '1rem', py: 0.5 }}\r\n        />\r\n      </Box>\r\n\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={progress}\r\n        sx={{ height: 10, borderRadius: 5 }}\r\n      />\r\n      \r\n      <Typography variant=\"h6\" align=\"center\" color=\"text.secondary\">\r\n        Question {currentQuestion + 1} of {questions.length}\r\n      </Typography>\r\n\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          p: { xs: 2, sm: 4 },\r\n          borderRadius: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {questions[currentQuestion].question}\r\n        </Typography>\r\n\r\n        {questions[currentQuestion].scenario?.type === 'email' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: 'background.default',\r\n              fontFamily: 'monospace'\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <strong>From:</strong> {questions[currentQuestion].scenario.from}\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <strong>Subject:</strong> {questions[currentQuestion].scenario.subject}\r\n            </Typography>\r\n            <Divider sx={{ my: 1 }} />\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                whiteSpace: 'pre-line',\r\n                mt: 1\r\n              }}\r\n            >\r\n              {questions[currentQuestion].scenario.content}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'popup' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#fff4e5',\r\n              border: '2px solid #ed6c02'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" gutterBottom sx={{ color: '#ed6c02', fontWeight: 'bold' }}>\r\n              {questions[currentQuestion].scenario.title}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                whiteSpace: 'pre-line'\r\n              }}\r\n            >\r\n              {questions[currentQuestion].scenario.content}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'code_review' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#1e1e1e',\r\n              fontFamily: 'monospace'\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                whiteSpace: 'pre',\r\n                color: '#d4d4d4',\r\n                overflowX: 'auto'\r\n              }}\r\n            >\r\n              {questions[currentQuestion].scenario.code}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'log_analysis' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#1e1e1e',\r\n              fontFamily: 'monospace'\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                whiteSpace: 'pre-line',\r\n                color: '#d4d4d4'\r\n              }}\r\n            >\r\n              {questions[currentQuestion].scenario.entries?.join('\\n') || questions[currentQuestion].scenario.log_entries?.join('\\n')}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'network_traffic' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#f5f5f5'\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <strong>Pattern:</strong> {questions[currentQuestion].scenario.pattern}\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <strong>Frequency:</strong> {questions[currentQuestion].scenario.frequency}\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <strong>Target:</strong> {questions[currentQuestion].scenario.target}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'message' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#f8f9fa'\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <strong>{questions[currentQuestion].scenario.sender}</strong>\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                whiteSpace: 'pre-line'\r\n              }}\r\n            >\r\n              {questions[currentQuestion].scenario.content}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'sms' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#e3f2fd',\r\n              maxWidth: '300px'\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" gutterBottom color=\"primary\">\r\n              <strong>{questions[currentQuestion].scenario.sender}</strong>\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                whiteSpace: 'pre-line'\r\n              }}\r\n            >\r\n              {questions[currentQuestion].scenario.content}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'password_analysis' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#f5f5f5'\r\n            }}\r\n          >\r\n            {questions[currentQuestion].scenario.passwords.map((password, index) => (\r\n              <Box key={index} sx={{ mb: 1 }}>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  <strong>Password {index + 1}:</strong> {password.value}\r\n                </Typography>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  Strength: {password.strength} | Issues: {password.issues.join(', ')}\r\n                </Typography>\r\n                {index < questions[currentQuestion].scenario.passwords.length - 1 && <Divider sx={{ my: 1 }} />}\r\n              </Box>\r\n            ))}\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'network_setup' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#f5f5f5'\r\n            }}\r\n          >\r\n            {questions[currentQuestion].scenario.networks.map((network, index) => (\r\n              <Box key={index} sx={{ mb: 1 }}>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  <strong>Network {index + 1}:</strong> {network.name}\r\n                </Typography>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  Security: {network.security}\r\n                </Typography>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  VPN: {network.vpn ? '✅' : '❌'} | HTTPS: {network.https ? '✅' : '❌'}\r\n                </Typography>\r\n                {index < questions[currentQuestion].scenario.networks.length - 1 && <Divider sx={{ my: 1 }} />}\r\n              </Box>\r\n            ))}\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'system_prompt' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#fff',\r\n              border: '1px solid #ccc'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" gutterBottom sx={{ fontWeight: 'bold' }}>\r\n              {questions[currentQuestion].scenario.title}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                whiteSpace: 'pre-line'\r\n              }}\r\n            >\r\n              {questions[currentQuestion].scenario.content}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'physical_security' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#ffebee'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              <strong>Item:</strong> {questions[currentQuestion].scenario.item}\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <strong>Context:</strong> {questions[currentQuestion].scenario.context}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              <strong>Risks:</strong> {questions[currentQuestion].scenario.risks.join(', ')}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'webpage' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#fff'\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" gutterBottom sx={{ color: 'text.secondary' }}>\r\n              {questions[currentQuestion].scenario.url}\r\n            </Typography>\r\n            <Box sx={{ mt: 2 }}>\r\n              {questions[currentQuestion].scenario.elements.map((element, index) => (\r\n                <Button\r\n                  key={index}\r\n                  variant={element.type === 'legitimate' ? 'contained' : 'outlined'}\r\n                  color={element.type === 'legitimate' ? 'primary' : 'inherit'}\r\n                  sx={{ m: 1 }}\r\n                  disabled={isAnswered}\r\n                >\r\n                  {element.text}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Paper>\r\n        )}\r\n\r\n        {questions[currentQuestion].scenario?.type === 'exploit_analysis' && (\r\n          <Paper\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2,\r\n              mb: 3,\r\n              backgroundColor: '#1e1e1e',\r\n              fontFamily: 'monospace'\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" sx={{ color: '#d4d4d4' }}>\r\n              <strong>Payload:</strong>\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                whiteSpace: 'pre-wrap',\r\n                color: '#d4d4d4',\r\n                overflowX: 'auto',\r\n                mt: 1\r\n              }}\r\n            >\r\n              {questions[currentQuestion].scenario.payload}\r\n            </Typography>\r\n            <Divider sx={{ my: 1, borderColor: '#666' }} />\r\n            <Typography variant=\"body2\" sx={{ color: '#d4d4d4' }}>\r\n              <strong>Target:</strong> {questions[currentQuestion].scenario.target}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ color: '#d4d4d4' }}>\r\n              <strong>Protection:</strong> {questions[currentQuestion].scenario.protection}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        <FormControl component=\"fieldset\" sx={{ width: '100%', mt: 2 }}>\r\n          <RadioGroup value={selectedAnswer} onChange={handleAnswerSelect}>\r\n            {questions[currentQuestion].options.map((option, index) => (\r\n              <FormControlLabel\r\n                key={index}\r\n                value={index}\r\n                control={<Radio />}\r\n                label={option}\r\n                disabled={isAnswered}\r\n                sx={{\r\n                  marginY: 1,\r\n                  padding: 1,\r\n                  borderRadius: 1,\r\n                  '&:hover': {\r\n                    backgroundColor: 'action.hover',\r\n                  },\r\n                }}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        {showExplanation && (\r\n          <Alert\r\n            severity={selectedAnswer === questions[currentQuestion].correctAnswer ? \"success\" : \"error\"}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            {questions[currentQuestion].explanation}\r\n          </Alert>\r\n        )}\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            mt: 3,\r\n            gap: 2,\r\n            flexDirection: { xs: 'column', sm: 'row' },\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={selectedAnswer === null || isAnswered}\r\n            onClick={handleSubmit}\r\n            fullWidth={true}\r\n            sx={{ order: { xs: 2, sm: 1 } }}\r\n          >\r\n            Submit Answer\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            disabled={!isAnswered}\r\n            onClick={handleNext}\r\n            fullWidth={true}\r\n            sx={{ order: { xs: 1, sm: 2 } }}\r\n          >\r\n            {currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default QuizPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}